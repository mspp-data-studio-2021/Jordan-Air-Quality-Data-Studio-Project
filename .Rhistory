plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "COVID Deaths in NYS from March 2020-March 2021",
color = NULL,
x = "Date",
y = "COVID deaths"
)
ggplotly(d1) %>%
layout(title = list(text = paste0('COVID Deaths in NYS, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: NYS Dept. of Health',
'<sup>',
'</sup>')))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fs)
library(skimr)
library(janitor)
library(lubridate)
EPA_2020 <- read_csv(path("..", "raw data", "EPA AQI by county 2020.csv"))
glimpse(EPA_2020)
skim(EPA_2020)
view(EPA_2020)
EPA_2020 <- clean_names(EPA_2020)
view(EPA_2020)
EPA_2020 <- filter(EPA_2020, state_name == "New York")
view(EPA_2020)
EPA_2021 <- read_csv(path("..", "raw data", "EPA AQI by county 2021.csv"))
glimpse(EPA_2021)
skim(EPA_2021)
view(EPA_2021)
EPA_2021 <- clean_names(EPA_2021)
view(EPA_2021)
EPA_2021 <- filter(EPA_2021, state_name == "New York")
view(EPA_2021)
skim(EPA_2020)
skim(EPA_2021)
NYS_Covid_Deaths <- read_csv(path("..", "raw data", "NYS COVID deaths by county.csv"))
glimpse(NYS_Covid_Deaths)
view(NYS_Covid_Deaths)
NYS_Covid_Deaths <- clean_names(NYS_Covid_Deaths)
view(NYS_Covid_Deaths)
skim(NYS_Covid_Deaths)
EPA_2020 <- select(EPA_2020, -state_name, -state_code, -defining_site)
EPA_2020
EPA_2021 <- select(EPA_2021, -state_name, -state_code, -defining_site)
EPA_2021
NYS_Covid_Deaths <- select(NYS_Covid_Deaths, -place_of_fatality)
NYS_Covid_Deaths
EPA_2020 <- select(EPA_2020, -county_code, -category)
EPA_2021 <- select(EPA_2021, -county_code, -category)
view(EPA_2020)
view(EPA_2021)
view(NYS_Covid_Deaths)
EPA_2020 <- filter(EPA_2020, defining_parameter == "Ozone" | defining_parameter == "PM2.5")
view(EPA_2020)
EPA_2021 <- filter(EPA_2021, defining_parameter == "Ozone" | defining_parameter == "PM2.5")
view(EPA_2021)
EPA_2020 <- rename(EPA_2020, pollutant = defining_parameter)
EPA_2020 <- rename(EPA_2020, county = county_name)
view(EPA_2020)
EPA_2021 <- rename(EPA_2021, pollutant = defining_parameter)
EPA_2021 <- rename(EPA_2021, county = county_name)
view(EPA_2021)
NYS_Covid_Deaths <- rename(NYS_Covid_Deaths, date = report_date)
NYS_Covid_Deaths <- rename(NYS_Covid_Deaths, deaths = deaths_by_county_of_residence)
view(NYS_Covid_Deaths)
glimpse(EPA_2020)
glimpse(EPA_2021)
glimpse(NYS_Covid_Deaths)
new_EPA_2021 <- EPA_2021 %>%
mutate(new_date = mdy(date))
view(new_EPA_2021)
new_NYS_Covid_Deaths <- NYS_Covid_Deaths %>%
mutate(new_date = mdy(date))
view(new_NYS_Covid_Deaths)
new_EPA_2020 <- EPA_2020 %>%
mutate(new_date = mdy(date))
view(new_EPA_2020)
new_EPA_2021 <- select(new_EPA_2021, -date)
new_EPA_2021 <- rename(new_EPA_2021, date = new_date)
view(new_EPA_2021)
new_NYS_Covid_Deaths <- select(new_NYS_Covid_Deaths, -date)
new_NYS_Covid_Deaths <- rename(new_NYS_Covid_Deaths, date = new_date)
view(new_NYS_Covid_Deaths)
new_EPA_2020 <- select(new_EPA_2020, -date)
new_EPA_2020 <- rename(new_EPA_2020, date = new_date)
view(new_EPA_2020)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fs)
library(skimr)
library(janitor)
combined_data <- rbind(new_EPA_2020, new_EPA_2021)
view(combined_data)
merged_data <- inner_join(
combined_data,
new_NYS_Covid_Deaths,
by = c("county", "date"),
copy = FALSE,
suffix = c(".x", ".y"),
keep = FALSE,
na_matches = c("na", "never")
)
view(merged_data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fs)
library(skimr)
library(ggpubr)
library(broom)
library(ggpmisc)
library(gtsummary)
library(gt)
library(ggeffects)
regression_results <- lm(aqi ~ deaths, data = merged_data) %>%
tidy()
view(regression_results)
merged_data_2 <- mutate(merged_data, date = as.character(date))
view(merged_data_2)
regression_results_with_controls <- lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data_2)
summary(regression_results_with_controls)
regression_results_with_controls <- lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data_2) %>%
tidy()
view(regression_results_with_controls)
regression_results_with_controls <- lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data_2) %>%
tidy()
view(regression_results_with_controls)
reverse_regression_results_with_controls <- lm(deaths ~ aqi + county + date + pollutant + number_of_sites_reporting, data = merged_data_2)
summary(reverse_regression_results_with_controls)
reverse_regression_results_with_controls <- lm(deaths ~ aqi + county + date + pollutant + number_of_sites_reporting, data = merged_data_2) %>%
tidy()
view(reverse_regression_results_with_controls)
first_regression <- lm(
aqi ~ deaths + county + date + pollutant + number_of_sites_reporting,
data = merged_data_2,
)
tbl_regression(
first_regression,
include = -date,
label = list(
"deaths" ~ "COVID Deaths in NYS",
"county" ~ "County in NYS",
# "date" ~ "Date",
"pollutant" ~ "Ozone and PM2.5",
"number_of_sites_reporting" ~ "Sites where AQI measured"
)
)
reverse_regression <- lm(
deaths ~ aqi + county + date + pollutant + number_of_sites_reporting,
data = merged_data_2,
)
tbl_regression(
reverse_regression,
include = -date,
label = list(
"aqi" ~ "AQI Pollutant Measurements",
"county" ~ "County in NYS",
# "date" ~ "Date",
"pollutant" ~ "Ozone and PM2.5",
"number_of_sites_reporting" ~ "Sites where AQI measured"
)
)
regression=lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data_2)
pred1 <- ggpredict(regression)
ggplot(pred1$deaths) +
aes(x = x, y = predicted) +
geom_point(aes(y = aqi, x = deaths), data = merged_data_2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, x = x),
fill = "red",
alpha = .3,
inherit.aes = FALSE) +
geom_line(color = "red", size = 1) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "Regression of AQI on COVID Deaths",
color = NULL,
x = "COVID Deaths",
y = "Pollutant AQI Level",
caption = "Source: EPA and NYS Dept. of Health"
)
reverse_regression=lm(deaths ~ aqi + county + date + pollutant + number_of_sites_reporting, data = merged_data_2)
pred2 <- ggpredict(reverse_regression)
ggplot(pred2$aqi) +
aes(x = x, y = predicted) +
geom_point(aes(y = deaths, x = aqi), data = merged_data_2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, x = x),
fill = "red",
alpha = .3,
inherit.aes = FALSE) +
geom_line(color = "red", size = 1) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "Regression of COVID Deaths on AQI",
color = NULL,
x = "Pollutant AQI Level",
y = "COVID Deaths",
caption = "Source: EPA and NYS Dept. of Health"
)
regression_test <- lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data_2
merged_data_2$predlm = predict(regression_test)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fs)
library(skimr)
library(ggpubr)
library(broom)
library(ggpmisc)
library(ggplot2)
library(plotly)
ggplot(merged_data) +
aes(x = date, y = aqi, fill = pollutant) +
geom_col(stat = "identity", position = "dodge") +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
labs(
title = "AQI levels from March 2020-March 2021",
subtitle = "By Pollutant: Ozone and PM2.5",
fill = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, fill = pollutant) +
geom_col() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI levels from March 2020-March 2021",
subtitle = "Pollutant: Ozone",
fill = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
merged_data %>%
filter(pollutant %in% c("PM2.5")) %>%
ggplot() +
aes(x = date, y = aqi, fill = pollutant) +
geom_col() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI levels from March 2020-March 2021",
subtitle = "Pollutant: PM2.5",
fill = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
a <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label = county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level",
)
ggplotly(a) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
a1 <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label = county) +
geom_line() +
scale_x_date(date_labels = "%b-%y", date_breaks = "4 months") +
scale_y_continuous(labels = scales::label_number_si()) +
facet_wrap(vars(county),nrow = 5) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(a1) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
b <- merged_data %>%
filter(pollutant %in% c("PM2.5")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(b) %>%
layout(title = list(text = paste0('PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(c) %>%
layout(title = list(text = paste0('Ozone AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
merged_data %>%
filter(county %in% c("Erie","Ontario","Onondaga","Queens","Albany","Rockland","Kings","Nassau")) %>%
ggplot() +
aes(x = date, y = deaths, color = county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "COVID Deaths in NYS from March 2020-March 2021",
subtitle = "Select Counties",
color = NULL,
x = "Date",
y = "COVID deaths",
caption = "Source: NYS Dept. of Health"
)
d <- ggplot(merged_data) +
aes(x = date, y = deaths, color = county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "COVID Deaths in NYS from March 2020-March 2021",
subtitle = "By County",
color = NULL,
x = "Date",
y = "COVID deaths",
caption = "Source: NYS Health"
)
ggplotly(d) %>%
layout(title = list(text = paste0('COVID Deaths in NYS, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: NYS Dept. of Health',
'<sup>',
'</sup>')))
d1 <- ggplot(merged_data) +
aes(x = date, y = deaths, color = county) +
geom_line() +
scale_x_date(date_labels = "%b-%y", date_breaks = "4 months") +
scale_y_continuous(labels = scales::label_number_si()) +
facet_wrap(vars(county),nrow = 5) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "COVID Deaths in NYS from March 2020-March 2021",
color = NULL,
x = "Date",
y = "COVID deaths"
)
ggplotly(d1) %>%
layout(title = list(text = paste0('COVID Deaths in NYS, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: NYS Dept. of Health',
'<sup>',
'</sup>')))
merged_data %>%
group_by(county) %>%
summarize(avg_aqi = mean(aqi))
ungroup(merged_data)
merged_data %>%
group_by(pollutant, county) %>%
summarize(avg_AQI = mean(aqi))
ungroup(merged_data)
merged_data %>%
group_by(pollutant) %>%
summarize(avg_AQI = mean(aqi))
ungroup(merged_data)
merged_data %>%
group_by(county) %>%
summarize(avg_death = mean(deaths))
ungroup(merged_data)
View(a)
ggplot(pred1$deaths) +
aes(x = x, y = predicted) +
geom_point(aes(y = aqi, x = deaths), data = merged_data_2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, x = x),
fill = "red",
alpha = .3,
inherit.aes = FALSE) +
geom_line(color = "red", size = 1) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "Regression of AQI on COVID Deaths",
color = NULL,
x = "COVID Deaths",
y = "Pollutant AQI Level",
caption = "Source: EPA and NYS Dept. of Health"
)
ggplot(pred2$aqi) +
aes(x = x, y = predicted) +
geom_point(aes(y = deaths, x = aqi), data = merged_data_2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, x = x),
fill = "red",
alpha = .3,
inherit.aes = FALSE) +
geom_line(color = "red", size = 1) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "Regression of COVID Deaths on AQI",
color = NULL,
x = "Pollutant AQI Level",
y = "COVID Deaths",
caption = "Source: EPA and NYS Dept. of Health"
)
reverse_regression_results_with_controls <- lm(deaths ~ aqi + county + date + pollutant + number_of_sites_reporting, data = merged_data_2) %>%
tidy()
view(reverse_regression_results_with_controls)
