axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
subtitle = "Pollutant: Ozone",
color = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
ggplotly(c)
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
subtitle = "Pollutant: Ozone",
color = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
ggplotly(c)
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
subtitle = "Pollutant: Ozone",
color = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
ggplotly(c) %>%
layout(title = list(text = paste0('AQI Levels from March 2020-March 2021',
'<br>',
'<sup>',
'Pollutant: Ozone',
'</sup>'))))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
subtitle = "Pollutant: Ozone",
color = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
ggplotly(c) %>%
layout(title = list(text = paste0('AQI Levels from March 2020-March 2021',
'<br>',
'<sup>',
'Pollutant: Ozone',
'</sup>')))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
subtitle = "Pollutant: Ozone",
color = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
ggplotly(c) %>%
layout(title = list(text = paste0('AQI Levels from March 2020-March 2021',
'<br>',
'<sup>',
'Pollutant: Ozone',
'Source: EPA'
'</sup>')))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
subtitle = "Pollutant: Ozone",
color = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
ggplotly(c) %>%
layout(title = list(text = paste0('AQI Levels from March 2020-March 2021',
'<br>',
'<sup>',
'Pollutant: Ozone',
'Source: EPA',
'</sup>')))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
subtitle = "Pollutant: Ozone",
color = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
ggplotly(c) %>%
layout(title = list(text = paste0('AQI Levels from March 2020-March 2021',
'<br>',
'<sup>',
'Pollutant: Ozone',
'<sup>',
'<sup>',
'Source: EPA',
'</sup>')))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
subtitle = "Pollutant: Ozone",
color = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
ggplotly(c) %>%
layout(title = list(text = paste0('Ozone AQI Levels from March 2020-March 2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(c) %>%
layout(title = list(text = paste0('Ozone AQI Levels from March 2020-March 2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(c) %>%
layout(title = list(text = paste0('Ozone AQI Levels, by County, from March 2020-March 2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
a <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(a) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from March 2020-March 2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
a <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(a) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
b <- merged_data %>%
filter(pollutant %in% c("PM2.5")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(b) %>%
layout(title = list(text = paste0('PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(c) %>%
layout(title = list(text = paste0('Ozone AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(c) %>%
layout(title = list(text = paste0('Ozone AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(c) %>%
layout(title = list(text = paste0('Ozone AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
d <- ggplot(merged_data) +
aes(x = date, y = deaths, color = county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "COVID Deaths in NYS from March 2020-March 2021",
subtitle = "By County",
color = NULL,
x = "Date",
y = "COVID deaths",
caption = "Source: NYS Health"
)
ggplotly(d) %>%
layout(title = list(text = paste0('COVID Deaths in NYS, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: NYS Dept. of Health',
'<sup>',
'</sup>')))
merged_data %>%
filter(county %in% c("Erie","Ontario","Onondaga","Queens","Albany","Rockland","Kings","Nassau")) %>%
ggplot() +
aes(x = date, y = deaths, color = county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "COVID Deaths in NYS from March 2020-March 2021",
subtitle = "Select Counties",
color = NULL,
x = "Date",
y = "COVID deaths",
caption = "Source: NYS Dept. of Health"
)
ggplot(merged_data) +
aes(x = date, y = deaths, fill = county) +
geom_col(stat = "identity", position = "dodge") +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "COVID Deaths in NYS from March 2020-March 2021",
subtitle = "By County",
fill = NULL,
x = "Date",
y = "COVID Deaths",
caption = "Source: NYS Dept. of Health"
)
merged_data %>%
filter(pollutant %in% c("PM2.5")) %>%
ggplot() +
aes(x = date, y = aqi, fill = pollutant) +
geom_col() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI levels from March 2020-March 2021",
subtitle = "Pollutant: PM2.5",
fill = NULL,
x = "Date",
y = "AQI Level",
caption = "Source: EPA"
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fs)
library(skimr)
library(janitor)
EPA_2020 <- read_csv(path("raw data/EPA AQI by county 2020.csv"))
NYS_Covid_Deaths <- read_csv(path("raw data/NYS COVID deaths by county.csv"))
install.packages("lubridate")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fs)
library(skimr)
library(janitor)
library(lubridate)
NYS_Covid_Deaths <- read_csv(path("/Users/jordankoster/Desktop/Jordan-Air-Quality-Data-Studio-Project/raw data/NYS COVID deaths by county.csv"))
view(NYS_Covid_Deaths)
EPA_2020 <- read_csv(path("/Users/jordankoster/Desktop/Jordan-Air-Quality-Data-Studio-Project/raw data/EPA AQI by county 2020.csv"))
view(EPA_2020)
EPA_2021 <- read_csv(path("/Users/jordankoster/Desktop/Jordan-Air-Quality-Data-Studio-Project/raw data/EPA AQI by county 2021.csv"))
view(EPA_2021)
