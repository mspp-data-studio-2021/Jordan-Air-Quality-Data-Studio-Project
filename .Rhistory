scale_x_date(date_labels = "%y-%m", date_breaks = "6 months") +
scale_y_continuous(labels = scales::label_number_si()) +
facet_wrap(vars(county),nrow = 5) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(a) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
a <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label=pollutant) +
geom_line() +
scale_x_date(date_labels = "%y-%m", date_breaks = "1 year") +
scale_y_continuous(labels = scales::label_number_si()) +
facet_wrap(vars(county),nrow = 5) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(a) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
a <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label=pollutant) +
geom_line() +
scale_x_date(date_labels = "%y-%m", date_breaks = "4 months") +
scale_y_continuous(labels = scales::label_number_si()) +
facet_wrap(vars(county),nrow = 5) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(a) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
a <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label=pollutant) +
geom_line() +
scale_x_date(date_labels = "%b-%y", date_breaks = "4 months") +
scale_y_continuous(labels = scales::label_number_si()) +
facet_wrap(vars(county),nrow = 5) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(a) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
a <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label = county) +
geom_line() +
scale_x_date(date_labels = "%b-%y", date_breaks = "4 months") +
scale_y_continuous(labels = scales::label_number_si()) +
facet_wrap(vars(county),nrow = 5) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(a) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
b <- merged_data %>%
filter(pollutant %in% c("PM2.5")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(b) %>%
layout(title = list(text = paste0('PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
c <- merged_data %>%
filter(pollutant %in% c("Ozone")) %>%
ggplot() +
aes(x = date, y = aqi, color = pollutant, label=county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(c) %>%
layout(title = list(text = paste0('Ozone AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
a1 <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label = county) +
geom_line() +
scale_x_date(date_labels = "%b-%y", date_breaks = "4 months") +
scale_y_continuous(labels = scales::label_number_si()) +
facet_wrap(vars(county),nrow = 5) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(a1) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
a <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label = county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level",
)
ggplotly(a) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
merged_data %>%
filter(county %in% c("Erie","Ontario","Onondaga","Queens","Albany","Rockland","Kings","Nassau")) %>%
ggplot() +
aes(x = date, y = deaths, color = county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "COVID Deaths in NYS from March 2020-March 2021",
subtitle = "Select Counties",
color = NULL,
x = "Date",
y = "COVID deaths",
caption = "Source: NYS Dept. of Health"
)
d <- ggplot(merged_data) +
aes(x = date, y = deaths, color = county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "COVID Deaths in NYS from March 2020-March 2021",
subtitle = "By County",
color = NULL,
x = "Date",
y = "COVID deaths",
caption = "Source: NYS Health"
)
ggplotly(d) %>%
layout(title = list(text = paste0('COVID Deaths in NYS, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: NYS Dept. of Health',
'<sup>',
'</sup>')))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fs)
library(skimr)
library(ggpubr)
library(broom)
library(ggpmisc)
library(ggplot2)
library(gtsummary)
library(gt)
regression_results_with_controls <- lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data) %>%
tidy()
view(regression_results_with_controls)
reverse_regression_results_with_controls <- lm(deaths ~ aqi + county + date + pollutant + number_of_sites_reporting, data = merged_data) %>%
tidy()
view(reverse_regression_results_with_controls)
my.formula <- y ~ x
ggplot(data = merged_data) +
aes(x = deaths, y = aqi, color = pollutant) +
geom_point(size = 0.5, alpha = 0.25) +
geom_smooth(method=lm, se=TRUE, show.legend=TRUE,formula = my.formula) +
stat_poly_eq(formula = my.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
coord_cartesian(ylim = c(0,100)) +
labs(
title = "Regression of AQI on COVID Deaths",
subtitle = "By Pollutant",
x = "COVID Deaths",
y = "Pollutant AQI levels",
caption = "Source: EPA and NYS Health",
)
my.formula.1 <- y ~ x
ggplot(data = merged_data) +
aes(x = aqi, y = deaths, color = pollutant) +
geom_point(size = 0.5, alpha = 0.25) +
geom_smooth(method=lm, se=TRUE, show.legend=TRUE,formula = my.formula.1) +
stat_poly_eq(formula = my.formula.1,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
coord_cartesian(ylim = c(0,4000), xlim = c(0,100)) +
labs(
title = "Regression of COVID Deaths on AQI",
subtitle = "By Pollutant",
x = "Pollutant AQI Levels",
y = "COVID Deaths",
caption = "Source: EPA and NYS Health",
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fs)
library(skimr)
library(ggpubr)
library(broom)
library(ggpmisc)
library(ggplot2)
library(gtsummary)
library(gt)
library(purrr)
library(forcats)
library(readr)
library(stringr)
regression_results <- lm(aqi ~ deaths, data = merged_data) %>%
tidy()
view(regression_results)
regression_results_with_controls <- lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data) %>%
tidy()
view(regression_results_with_controls)
reverse_regression_results_with_controls <- lm(deaths ~ aqi + county + date + pollutant + number_of_sites_reporting, data = merged_data) %>%
tidy()
view(reverse_regression_results_with_controls)
ggplot(iris, aes(x = deaths + county + date + pollutant + number_of_sites_reporting, y = aqi)) + geom_point() +
stat_smooth(method = "lm", col = "red")
merged_data %>%
ggplot(iris, aes(x = deaths + county + date + pollutant + number_of_sites_reporting, y = aqi)) + geom_point() +
stat_smooth(method = "lm", col = "red")
merged_data %>%
ggplot(), aes(x = deaths + county + date + pollutant + number_of_sites_reporting, y = aqi)) + geom_point() +
ggplot(merged_data),
ggplot(merged_data)
aes(x = deaths + county + date + pollutant + number_of_sites_reporting, y = aqi)) + geom_point() +
ggplot(merged_data, aes(x = deaths + county + date + pollutant + number_of_sites_reporting, y = aqi)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
summary(reverse_regression_results_with_controls)
ggpredict(reverse_regression_results_with_controls)
install.packages("devtools")
install.packages(ggiraphExtra)
library(ggpredict)
?ggPredict
install.packages("ggiraphExtra")
?ggPredict
install.packages("ggeffects")
?ggPredict
library(ggeffects)
ggpredict(reverse_regression_results_with_controls)
regression_1=lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data)
ggPredict(regression_1)
regression_1=lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data)
ggpredict(regression_1)
regression_2=lm(deaths ~ aqi + county + date + pollutant + number_of_sites_reporting, data = merged_data)
ggpredict(regression_2)
regression=lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data)
graph <- ggpredict(regression, terms = c("date"))
?droplevels
regression=lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data)
ggpredict(regression)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fs)
library(skimr)
library(ggpubr)
library(broom)
library(ggpmisc)
library(ggplot2)
library(plotly)
a <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label = county) +
geom_line() +
scale_x_date(date_labels = "%Y-%m") +
scale_y_continuous(labels = scales::label_number_si()) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10))
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level",
)
ggplotly(a) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
a1 <- ggplot(merged_data) +
aes(x = date, y = aqi, color = pollutant, label = county) +
geom_line() +
scale_x_date(date_labels = "%b-%y", date_breaks = "4 months") +
scale_y_continuous(labels = scales::label_number_si()) +
facet_wrap(vars(county),nrow = 5) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "AQI Levels from March 2020-March 2021",
color = NULL,
x = "Date",
y = "AQI Level"
)
ggplotly(a1) %>%
layout(title = list(text = paste0('Ozone and PM2.5 AQI Levels, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: EPA',
'<sup>',
'</sup>')))
d1 <- ggplot(merged_data) +
aes(x = date, y = deaths, color = county, label = county) +
geom_line() +
scale_x_date(date_labels = "%b-%y", date_breaks = "4 months") +
scale_y_continuous(labels = scales::label_number_si()) +
facet_wrap(vars(county),nrow = 5) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "COVID Deaths in NYS from March 2020-March 2021",
color = NULL,
x = "Date",
y = "COVID deaths"
)
ggplotly(d1) %>%
layout(title = list(text = paste0('COVID Deaths in NYS, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: NYS Dept. of Health',
'<sup>',
'</sup>')))
d1 <- ggplot(merged_data) +
aes(x = date, y = deaths, color = county) +
geom_line() +
scale_x_date(date_labels = "%b-%y", date_breaks = "4 months") +
scale_y_continuous(labels = scales::label_number_si()) +
facet_wrap(vars(county),nrow = 5) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(margin = margin(r = -15)),
plot.caption = element_text(face = "italic", color = "darkgrey", margin = margin(t = 10)), axis.text.x = element_text(angle = 45)
) +
labs(
title = "COVID Deaths in NYS from March 2020-March 2021",
color = NULL,
x = "Date",
y = "COVID deaths"
)
ggplotly(d1) %>%
layout(title = list(text = paste0('COVID Deaths in NYS, by County, from 3/2020-3/2021',
'<br>',
'<sup>',
'Source: NYS Dept. of Health',
'<sup>',
'</sup>')))
regression_results <- lm(aqi ~ deaths, data = merged_data) %>%
tidy()
view(regression_results)
regression_results_with_controls <- lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data) %>%
tidy()
view(regression_results_with_controls)
reverse_regression_results_with_controls <- lm(deaths ~ aqi + county + date + pollutant + number_of_sites_reporting, data = merged_data) %>%
tidy()
view(reverse_regression_results_with_controls)
view(regression_results_with_controls)
regression_results_with_controls <- lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data) %>%
tidy()
view(regression_results_with_controls)
summary(regression_results_with_controls)
regression_results_with_controls <- lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data)
summary(regression_results_with_controls)
regression_results_with_controls <- lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data) %>%
tidy()
view(regression_results_with_controls)
regression_results_with_controls <- lm(aqi ~ deaths + county + date + pollutant + number_of_sites_reporting, data = merged_data)
summary(regression_results_with_controls)
glimpse(merged_data)
reverse_regression_results_with_controls <- lm(deaths ~ aqi + county + date + pollutant + number_of_sites_reporting, data = merged_data)
summary(reverse_regression_results_with_controls)
reverse_regression_results_with_controls <- lm(deaths ~ aqi + county + date + pollutant + number_of_sites_reporting, data = merged_data) %>%
tidy()
view(reverse_regression_results_with_controls)
